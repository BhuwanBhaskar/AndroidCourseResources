Course 8/6/2012

Chapter 6, Fragments And The Fragment Manager

    Pg 80, Figure 6.11: On TableLayout: layout_height="wrap_content"
    Pg 81, "The first thing to consider when preparing a fragment to
        host an activity..." should be "The first thing to consider when 
        preparing an activity to host a fragment..."
    Pg 81, Figure 6.13: crime_fragment should be fragment_crime

Chapter 9, ListView
    Pg 147, Figure 9.29: focusable has already been set to "true" on the previous page.
    Pg 147, Figure 9.29: CheckBox also needs android:clickable="false"

Chapter 10, Multiple Activities
    Pg 156, Figure 10.13: Crime is a reference, so this code is not necessary
    Pg 162, Figure 10.25: LinearLayout should not be deleted here

Chapter 11, Menus
    Pg 165, Instructions on this page omit the xhdpi folder.
    Pg 166, Figure 11.4: This listing includes two mysterious strings which are never used. They should be ignored.
    Pg 176, "Now you can run..." You cannot at this point use the home button to navigate up,
        because it has not been enabled. Call "setDisplayHomeAsUpEnabled(true)" as depicted
        on page 178 to enable the Home button.

Chapter 12, Camera
    Pg 199, Figure 13.15: The Camera.open(int) method is only available on SDK 9 and up. To prevent
        Android Lint from producing an error from this code, change your project's minSdkVersion
        to "9" in your AndroidManifest.xml.
    Pg 210, Figure 13.29: The code here disagrees with the text on page 209. The code is right; the text 
        is wrong. Bitmaps are large, and we need to be aggressive about releasing them. Also, when the 
        image returns from the CrimeCameraActivity, onActivityResult is only called *after* onStart is called.
    Pg 210, Figure 13.29: onPause is missing code from earlier in the book. Preserve the existing code
        in your project here. 

Chapter 15, Touch Events
    Pg 240, "All is not perfect..." For some reason, this paragraph ends with the sentence, "ImageView." This 
        is an error.
    Pg 241, Figure 15.24:
        This code: 

    public Note(JSONObject json) throws JSONException {
    	text = json.getString(JSON_TEXT);
        originX = json.getInt(JSON_ORIGIN_X);
        originY = json.getInt(JSON_ORIGIN_Y);
        currentX = json.getInt(JSON_CURRENT_X);
        currentY = json.getInt(JSON_CURRENT_Y);
    }

        Should be this instead:

    public Note(JSONObject json) throws JSONException {
    	text = json.getString(JSON_TEXT);
        originX = (float)json.getDouble(JSON_ORIGIN_X);
        originY = (float)json.getDouble(JSON_ORIGIN_Y);
        currentX = (float)json.getDouble(JSON_CURRENT_X);
        currentY = (float)json.getDouble(JSON_CURRENT_Y);
    }
        
    Pg 243, "If you were puzzled..." These two paragraphs should read as follows:

        Your implementation here of addNote(Note) should be self explanatory. onLayout(...), though,
        requires some explanation. See, a user of this class will typically want to configure it in
        onCreateView(...). The problem is that in onCreateView(...), the views have not been laid out
        yet. That means that NoteDrawingView has no width or height! If you look back at your implementation
        of getLayoutParams(...), you can see that it will produce a view with a width and height of 0 
        under those conditions.

        The solution is to, for the time being, use those bogus layout params to set the child to be sizeless.
        By the time onLayout(...) is called, NoteDrawingView will know how big it is, and getLayoutParams(...)
        will return useful values. So in your onLayout(...) implementation, you double check the layout
        params values before calling through to super to let FrameLayout.onLayout(...) do its thing.

    Pg 248, Figure 16.4: .setNeutralButton() implementation here should be omitted.
